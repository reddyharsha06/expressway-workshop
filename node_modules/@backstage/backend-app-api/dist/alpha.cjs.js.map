{"version":3,"file":"alpha.cjs.js","sources":["../src/alpha/featureDiscoveryServiceFactory.ts"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  BackendFeature,\n  RootConfigService,\n  coreServices,\n  createServiceFactory,\n} from '@backstage/backend-plugin-api';\nimport {\n  featureDiscoveryServiceRef,\n  FeatureDiscoveryService,\n} from '@backstage/backend-plugin-api/alpha';\nimport { resolve as resolvePath, dirname } from 'path';\nimport fs from 'fs-extra';\nimport { BackstagePackageJson } from '@backstage/cli-node';\n\nconst LOADED_PACKAGE_ROLES = ['backend-plugin', 'backend-module'];\n\n/** @internal */\nasync function findClosestPackageDir(\n  searchDir: string,\n): Promise<string | undefined> {\n  let path = searchDir;\n\n  // Some confidence check to avoid infinite loop\n  for (let i = 0; i < 1000; i++) {\n    const packagePath = resolvePath(path, 'package.json');\n    const exists = await fs.pathExists(packagePath);\n    if (exists) {\n      return path;\n    }\n\n    const newPath = dirname(path);\n    if (newPath === path) {\n      return undefined;\n    }\n    path = newPath;\n  }\n\n  throw new Error(\n    `Iteration limit reached when searching for root package.json at ${searchDir}`,\n  );\n}\n\n/** @internal */\nclass PackageDiscoveryService implements FeatureDiscoveryService {\n  constructor(private readonly config: RootConfigService) {}\n\n  async getBackendFeatures(): Promise<{ features: Array<BackendFeature> }> {\n    if (this.config.getOptionalString('backend.packages') !== 'all') {\n      return { features: [] };\n    }\n\n    const packageDir = await findClosestPackageDir(process.argv[1]);\n    if (!packageDir) {\n      throw new Error('Package discovery failed to find package.json');\n    }\n    const { dependencies } = require(resolvePath(\n      packageDir,\n      'package.json',\n    )) as BackstagePackageJson;\n    const dependencyNames = Object.keys(dependencies || {});\n\n    const features: BackendFeature[] = [];\n\n    for (const name of dependencyNames) {\n      const depPkg = require(require.resolve(`${name}/package.json`, {\n        paths: [packageDir],\n      })) as BackstagePackageJson;\n      if (!LOADED_PACKAGE_ROLES.includes(depPkg?.backstage?.role ?? '')) {\n        continue;\n      }\n      const depModule = require(require.resolve(name, { paths: [packageDir] }));\n      for (const exportValue of Object.values(depModule)) {\n        if (isBackendFeature(exportValue)) {\n          features.push(exportValue);\n        }\n        if (isBackendFeatureFactory(exportValue)) {\n          features.push(exportValue());\n        }\n      }\n    }\n\n    return { features };\n  }\n}\n\n/** @alpha */\nexport const featureDiscoveryServiceFactory = createServiceFactory({\n  service: featureDiscoveryServiceRef,\n  deps: {\n    config: coreServices.rootConfig,\n  },\n  factory({ config }) {\n    return new PackageDiscoveryService(config);\n  },\n});\n\nfunction isBackendFeature(value: unknown): value is BackendFeature {\n  return (\n    !!value &&\n    typeof value === 'object' &&\n    (value as BackendFeature).$$type === '@backstage/BackendFeature'\n  );\n}\n\nfunction isBackendFeatureFactory(\n  value: unknown,\n): value is () => BackendFeature {\n  return (\n    !!value &&\n    typeof value === 'function' &&\n    (value as any).$$type === '@backstage/BackendFeatureFactory'\n  );\n}\n"],"names":["path","resolvePath","fs","dirname","createServiceFactory","featureDiscoveryServiceRef","coreServices"],"mappings":"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"}