{"version":3,"file":"alpha.cjs.js","sources":["../src/alpha.ts"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @packageDocumentation\n * A module for the search backend that exports TechDocs modules.\n */\n\nimport { loggerToWinstonLogger } from '@backstage/backend-common';\nimport {\n  coreServices,\n  createBackendModule,\n} from '@backstage/backend-plugin-api';\nimport { readTaskScheduleDefinitionFromConfig } from '@backstage/backend-tasks';\nimport { catalogServiceRef } from '@backstage/plugin-catalog-node/alpha';\nimport { DefaultTechDocsCollatorFactory } from '@backstage/plugin-search-backend-module-techdocs';\nimport { searchIndexRegistryExtensionPoint } from '@backstage/plugin-search-backend-node/alpha';\n\n/**\n * @alpha\n * Search backend module for the TechDocs index.\n */\nexport const searchModuleTechDocsCollator = createBackendModule({\n  moduleId: 'techDocsCollator',\n  pluginId: 'search',\n  register(env) {\n    env.registerInit({\n      deps: {\n        config: coreServices.rootConfig,\n        logger: coreServices.logger,\n        discovery: coreServices.discovery,\n        tokenManager: coreServices.tokenManager,\n        scheduler: coreServices.scheduler,\n        catalog: catalogServiceRef,\n        indexRegistry: searchIndexRegistryExtensionPoint,\n      },\n      async init({\n        config,\n        logger,\n        discovery,\n        tokenManager,\n        scheduler,\n        catalog,\n        indexRegistry,\n      }) {\n        const defaultSchedule = {\n          frequency: { minutes: 10 },\n          timeout: { minutes: 15 },\n          initialDelay: { seconds: 3 },\n        };\n\n        const schedule = config.has('search.collators.techdocs.schedule')\n          ? readTaskScheduleDefinitionFromConfig(\n              config.getConfig('search.collators.techdocs.schedule'),\n            )\n          : defaultSchedule;\n\n        indexRegistry.addCollator({\n          schedule: scheduler.createScheduledTaskRunner(schedule),\n          factory: DefaultTechDocsCollatorFactory.fromConfig(config, {\n            discovery,\n            tokenManager,\n            logger: loggerToWinstonLogger(logger),\n            catalogClient: catalog,\n          }),\n        });\n      },\n    });\n  },\n});\n"],"names":["createBackendModule","coreServices","catalogServiceRef","searchIndexRegistryExtensionPoint","readTaskScheduleDefinitionFromConfig","DefaultTechDocsCollatorFactory","loggerToWinstonLogger"],"mappings":";;;;;;;;;;;AAmCO,MAAM,+BAA+BA,oCAAoB,CAAA;AAAA,EAC9D,QAAU,EAAA,kBAAA;AAAA,EACV,QAAU,EAAA,QAAA;AAAA,EACV,SAAS,GAAK,EAAA;AACZ,IAAA,GAAA,CAAI,YAAa,CAAA;AAAA,MACf,IAAM,EAAA;AAAA,QACJ,QAAQC,6BAAa,CAAA,UAAA;AAAA,QACrB,QAAQA,6BAAa,CAAA,MAAA;AAAA,QACrB,WAAWA,6BAAa,CAAA,SAAA;AAAA,QACxB,cAAcA,6BAAa,CAAA,YAAA;AAAA,QAC3B,WAAWA,6BAAa,CAAA,SAAA;AAAA,QACxB,OAAS,EAAAC,uBAAA;AAAA,QACT,aAAe,EAAAC,yCAAA;AAAA,OACjB;AAAA,MACA,MAAM,IAAK,CAAA;AAAA,QACT,MAAA;AAAA,QACA,MAAA;AAAA,QACA,SAAA;AAAA,QACA,YAAA;AAAA,QACA,SAAA;AAAA,QACA,OAAA;AAAA,QACA,aAAA;AAAA,OACC,EAAA;AACD,QAAA,MAAM,eAAkB,GAAA;AAAA,UACtB,SAAA,EAAW,EAAE,OAAA,EAAS,EAAG,EAAA;AAAA,UACzB,OAAA,EAAS,EAAE,OAAA,EAAS,EAAG,EAAA;AAAA,UACvB,YAAA,EAAc,EAAE,OAAA,EAAS,CAAE,EAAA;AAAA,SAC7B,CAAA;AAEA,QAAA,MAAM,QAAW,GAAA,MAAA,CAAO,GAAI,CAAA,oCAAoC,CAC5D,GAAAC,iDAAA;AAAA,UACE,MAAA,CAAO,UAAU,oCAAoC,CAAA;AAAA,SAEvD,GAAA,eAAA,CAAA;AAEJ,QAAA,aAAA,CAAc,WAAY,CAAA;AAAA,UACxB,QAAA,EAAU,SAAU,CAAA,yBAAA,CAA0B,QAAQ,CAAA;AAAA,UACtD,OAAA,EAASC,gEAA+B,CAAA,UAAA,CAAW,MAAQ,EAAA;AAAA,YACzD,SAAA;AAAA,YACA,YAAA;AAAA,YACA,MAAA,EAAQC,oCAAsB,MAAM,CAAA;AAAA,YACpC,aAAe,EAAA,OAAA;AAAA,WAChB,CAAA;AAAA,SACF,CAAA,CAAA;AAAA,OACH;AAAA,KACD,CAAA,CAAA;AAAA,GACH;AACF,CAAC;;;;"}